# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Category {
  _id: ObjectId!
  name: String!
}

input ChangedPasswordInput {
  password: String!
  token: String!
}

input ChangedProfileInput {
  email: String!
  username: String!
}

input CreateProductInput {
  category: String!
  description: String!
  name: String!
  price: String!
  promotion: Boolean!
  status: Status!
  stock: String!
}

input CreateReviewInput {
  rating: String!
  review: String!
  username: String!
}

type Mutation {
  addProfilePicture(picture: Upload!): Boolean!
  addToNewsletter(email: String!): Boolean!
  changePassword(input: ChangedPasswordInput!): User
  confirmUser(token: String!): Boolean!
  createCategory(category: String!): Boolean!
  createProduct(input: CreateProductInput!, picture: [Upload!]!): Product!
  createProductReview(productId: String!, reviewInput: CreateReviewInput!): Product
  deleteCategory(categoryId: String!): Boolean!
  deleteFromNewsletter(newsletterId: String!): Boolean!
  deleteProduct(productId: String!): Boolean!
  deleteProductImage(keyId: String!, productId: String!): Boolean!
  deleteUser(userId: String!): Boolean!
  forgotPassword(email: String!): Boolean!
  signin(input: SigninInput!): UserResponse!
  signup(input: SignupInput!): UserResponse!
  updateProduct(input: UpdateProductInput!, productId: String!): Product!
  updateProfile(data: ChangedProfileInput!): User
}

type Newsletter {
  _id: ObjectId!
  email: String!
}

"""Mongo object id scalar type"""
scalar ObjectId

type Product {
  _id: ObjectId!
  categories: [Category!]!
  description: String!
  name: String!
  price: Float!
  productImageUrl: String
  productImages: [String!]!
  promotion: Boolean!
  reviews: [Review!]
  status: String!
  stock: Float!
}

type ProductPagination {
  count: Float!
  products: [Product!]!
}

input ProductPaginationInput {
  pageNumber: Float!
  pageSize: Float!
}

type ProductReviewPagination {
  _id: ObjectId!
  reviews: Reviews
}

type Query {
  getCategories: [Category!]
  getCurrentUser: User
  getNewsletters: [Newsletter!]
  getProduct(productId: String!): Product
  getProductReviewPagination(pagination: ProductPaginationInput!, productId: String!): [ProductReviewPagination!]
  getProducts: ProductPagination
  getProductsPagination(pagination: ProductPaginationInput!): ProductPagination
  getUser(userId: String!): User
  getUsers: [User!]
}

type Review {
  rating: Float
  review: String
  reviewerName: String
}

type Reviews {
  rating: String
  review: String
  reviewerName: String
}

input SigninInput {
  email: String!
  password: String!
}

input SignupInput {
  email: String!
  password: String!
  username: String!
}

"""Status product enum"""
enum Status {
  """The other left"""
  ARCHIVED
  DRAFT
  PUBLISHED
}

input UpdateProductInput {
  description: String
  name: String
  price: Float
  promotion: Boolean
  status: Status
  stock: Float
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  _id: ObjectId!
  confirmed: Boolean!
  email: String!
  role: String!
  username: String!
}

type UserResponse {
  token: String
  user: User
}
