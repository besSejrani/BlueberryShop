{"ast":null,"code":"import _defineProperty from \"C:/Users/Besjan.SEJRANI/Desktop/ecommerce-tech/Client/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Besjan.SEJRANI\\\\Desktop\\\\ecommerce-tech\\\\Client\\\\Layout\\\\Theme.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { grey, blue } from \"@material-ui/core/colors\"; // import { useSelector } from \"react-redux\";\n// import { IAppState } from \"../redux/rootReducer\";\n\nvar Theme = function Theme(props) {\n  //   const isDarkTheme = useSelector((state: IAppState) => state.ui.isDarkTheme);\n  var theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: grey[900]\n      },\n      secondary: {\n        main: blue[500]\n      },\n      //   type: isDarkTheme ? \"dark\" : \"light\",\n      type: \"light\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = Theme;\nexport var withTheme = function withTheme(Component) {\n  return function (props) {\n    return /*#__PURE__*/_jsxDEV(Theme, {\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this);\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Theme\");","map":{"version":3,"sources":["C:/Users/Besjan.SEJRANI/Desktop/ecommerce-tech/Client/Layout/Theme.tsx"],"names":["createMuiTheme","ThemeProvider","grey","blue","Theme","props","theme","palette","primary","main","secondary","type","children","withTheme","Component"],"mappings":";;;;;;;;;;AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,0BAA3B,C,CACA;AACA;;AAEA,IAAMC,KAAoB,GAAG,SAAvBA,KAAuB,CAACC,KAAD,EAAW;AACtC;AAEA,MAAMC,KAAK,GAAGN,cAAc,CAAC;AAC3BO,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAEP,IAAI,CAAC,GAAD;AADH,OADF;AAIPQ,MAAAA,SAAS,EAAE;AACTD,QAAAA,IAAI,EAAEN,IAAI,CAAC,GAAD;AADD,OAJJ;AAOP;AACAQ,MAAAA,IAAI,EAAE;AARC;AADkB,GAAD,CAA5B;AAaA,sBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEL,KAAtB;AAAA,cAA8BD,KAAK,CAACO;AAApC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAjBD;;KAAMR,K;AAmBN,OAAO,IAAMS,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAe;AACtC,SAAO,UAACT,KAAD,EAAW;AAChB,wBACE,QAAC,KAAD;AAAA,6BACE,QAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF;AAKD,GAND;AAOD,CARM","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { grey, blue } from \"@material-ui/core/colors\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { IAppState } from \"../redux/rootReducer\";\r\n\r\nconst Theme: React.FC<any> = (props) => {\r\n  //   const isDarkTheme = useSelector((state: IAppState) => state.ui.isDarkTheme);\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: grey[900],\r\n      },\r\n      secondary: {\r\n        main: blue[500],\r\n      },\r\n      //   type: isDarkTheme ? \"dark\" : \"light\",\r\n      type: \"light\",\r\n    },\r\n  });\r\n\r\n  return <ThemeProvider theme={theme}>{props.children}</ThemeProvider>;\r\n};\r\n\r\nexport const withTheme = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <Theme>\r\n        <Component {...props} />\r\n      </Theme>\r\n    );\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}