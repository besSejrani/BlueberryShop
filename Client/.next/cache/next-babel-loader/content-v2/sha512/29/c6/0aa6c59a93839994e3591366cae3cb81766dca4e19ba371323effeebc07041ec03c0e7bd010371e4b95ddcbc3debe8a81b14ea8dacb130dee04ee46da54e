{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-fallthrough */\nimport { ProductType } from \"./productType\";\nconst initialState = {\n  sidebarOpen: false,\n  cartOpen: false,\n  cartItems: 0,\n  cart: [],\n  cartSubTotal: 0,\n  cartTax: 0,\n  cartTotal: 0,\n  storeProducts: [],\n  filteredProducts: [],\n  featuredProducts: [],\n  singleProduct: {},\n  loading: true\n};\nexport default ((state = initialState, action) => {\n  const {\n    payload,\n    type\n  } = action;\n\n  switch (type) {\n    case ProductType.SIDE_BAR_TOGGLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sidebarOpen: !state.sidebarOpen\n      });\n\n    case ProductType.SIDE_CART_TOGGLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cartOpen: !state.cartOpen\n      });\n\n    case ProductType.SET_PRODUCTS:\n      let storeProducts = payload.map(item => {\n        const {\n          id\n        } = item.sys;\n        const image = item.fields.image.fields.file.url;\n\n        const product = _objectSpread(_objectSpread({\n          id\n        }, item.fields), {}, {\n          image\n        });\n\n        return product;\n      });\n      let featuredProducts = storeProducts.filter(item => item.featured === true);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        storeProducts: storeProducts,\n        filteredProducts: storeProducts,\n        featuredProducts: featuredProducts,\n        loading: false\n      });\n\n    case ProductType.ADD_TO_CART:\n      let tempCart = [...state.cart];\n      let tempProducts = [...state.storeProducts];\n      let tempItem = tempCart.find(item => item.id === payload);\n\n      if (!tempItem) {\n        tempItem = tempProducts.find(item => item.id === payload);\n        let total = tempItem.price;\n\n        let cartItem = _objectSpread(_objectSpread({}, tempItem), {}, {\n          count: 1,\n          total\n        });\n\n        tempCart = [...tempCart, cartItem];\n      } else {\n        tempItem.count++;\n        tempItem.total = tempItem.price * tempItem.count;\n        tempItem.total = parseFloat(tempItem.total.toFixed(2));\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: tempCart\n      });\n\n    case ProductType.ADD_TOTALS:\n      let subTotal = 0;\n      let cartItems = 0;\n      state.cart.forEach(item => {\n        subTotal += item.total;\n        cartItems += item.count;\n      });\n      subTotal = parseFloat(subTotal).toFixed(2);\n      let tax = parseFloat(subTotal * 0.2).toFixed(2);\n      let total = subTotal + tax;\n      total = parseFloat(total).toFixed(2);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cartItems: cartItems,\n        cartSubTotal: subTotal,\n        cartTax: tax,\n        cartTotal: total\n      });\n\n    case ProductType.SET_ITEM_CART:\n      let obj = {};\n      let cartStringify;\n      let cartSubTotalStringify;\n      let cartTaxStringify;\n      obj.cartStringify = state.cart;\n      obj.cartSubTotalStringify = Number(state.cartSubTotal);\n      obj.cartTaxStringify = Number(state.cartTax);\n      localStorage.setItem(\"cart\", JSON.stringify(obj));\n      return _objectSpread({}, state);\n\n    case ProductType.GET_ITEM_CART:\n      let cart = [];\n      let count = 0;\n      let cartTotal = 0;\n      let cartSubTotal = 0;\n      let cartTax = 0;\n\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n        cart.cartStringify.map(item => {\n          return count += item.count;\n        });\n        cart.cartStringify.map(item => {\n          cartTotal += item.total;\n          return parseFloat(cartTotal).toFixed(2);\n        });\n      } else {\n        cart.cartStringify = cart;\n        cart.cartSubTotalStringify = parseFloat(cartSubTotal).toFixed(2);\n        cart.cartTaxStringify = parseFloat(cartTax).toFixed(2);\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: cart.cartStringify,\n        cartItems: count,\n        cartTotal: cartTotal,\n        cartSubTotal: cart.cartSubTotalStringify,\n        cartTax: cart.cartTaxStringify\n      });\n\n    case ProductType.SET_SINGLE_PRODUCT:\n      let product = state.storeProducts.find(item => item.id === payload);\n      localStorage.setItem(\"singleProduct\", JSON.stringify(product));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        singleProduct: _objectSpread({}, product),\n        loading: false\n      });\n\n    case ProductType.GET_SINGLE_PRODUCT:\n      let singleProduct;\n\n      if (localStorage.getItem(\"singleProduct\")) {\n        singleProduct = JSON.parse(localStorage.getItem(\"singleProduct\"));\n      } else if (!localStorage.getItem(\"singleProduct\")) {\n        singleProduct = {};\n      } else {\n        return singleProduct;\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        singleProduct: _objectSpread({}, singleProduct),\n        loading: false\n      });\n\n    case ProductType.REMOVE:\n      let removeCart = [...state.cart];\n      removeCart = removeCart.filter(item => item.id !== payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: removeCart\n      });\n\n    case ProductType.CLEAR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: []\n      });\n\n    case ProductType.INCREMENT:\n      let incCart = [...state.cart];\n      return _objectSpread(_objectSpread({}, state), incCart);\n\n    case ProductType.DECREMENT:\n      let decCart = [...state.cart];\n      const cartItem = decCart.find(item => item.id === payload);\n\n      if (cartItem.count <= 1) {\n        let removeCart = [...state.cart];\n        removeCart = removeCart.filter(item => item.id !== payload);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: removeCart\n        });\n      }\n\n      cartItem.count = cartItem.count - 1;\n      cartItem.total = cartItem.count * cartItem.price;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: decCart\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Besjan.SEJRANI/Desktop/ecommerce-tech/Client/Redux/product/productReducer.ts"],"names":["ProductType","initialState","sidebarOpen","cartOpen","cartItems","cart","cartSubTotal","cartTax","cartTotal","storeProducts","filteredProducts","featuredProducts","singleProduct","loading","state","action","payload","type","SIDE_BAR_TOGGLE","SIDE_CART_TOGGLE","SET_PRODUCTS","map","item","id","sys","image","fields","file","url","product","filter","featured","ADD_TO_CART","tempCart","tempProducts","tempItem","find","total","price","cartItem","count","parseFloat","toFixed","ADD_TOTALS","subTotal","forEach","tax","SET_ITEM_CART","obj","cartStringify","cartSubTotalStringify","cartTaxStringify","Number","localStorage","setItem","JSON","stringify","GET_ITEM_CART","getItem","parse","SET_SINGLE_PRODUCT","GET_SINGLE_PRODUCT","REMOVE","removeCart","CLEAR","INCREMENT","incCart","DECREMENT","decCart"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-fallthrough */\r\nimport { ProductType } from \"./productType\";\r\n\r\ninterface ProductState {\r\n  sidebarOpen: boolean;\r\n  cartOpen: boolean;\r\n  cartItems: number;\r\n  cart: any[];\r\n  cartSubTotal: number;\r\n  cartTax: number;\r\n  cartTotal: number;\r\n  storeProducts: any[];\r\n  filteredProducts: any[];\r\n  featuredProducts: any[];\r\n  singleProduct: any;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState = {\r\n  sidebarOpen: false,\r\n  cartOpen: false,\r\n  cartItems: 0,\r\n  cart: [],\r\n  cartSubTotal: 0,\r\n  cartTax: 0,\r\n  cartTotal: 0,\r\n  storeProducts: [],\r\n  filteredProducts: [],\r\n  featuredProducts: [],\r\n  singleProduct: {},\r\n  loading: true,\r\n};\r\n\r\ninterface Action {\r\n  type: string;\r\n  payload?: any;\r\n}\r\n\r\nexport default (state: ProductState = initialState, action: Action): ProductState => {\r\n  const { payload, type } = action;\r\n\r\n  switch (type) {\r\n    case ProductType.SIDE_BAR_TOGGLE:\r\n      return { ...state, sidebarOpen: !state.sidebarOpen };\r\n\r\n    case ProductType.SIDE_CART_TOGGLE:\r\n      return { ...state, cartOpen: !state.cartOpen };\r\n\r\n    case ProductType.SET_PRODUCTS:\r\n      let storeProducts = payload.map((item) => {\r\n        const { id } = item.sys;\r\n        const image = item.fields.image.fields.file.url;\r\n        const product = { id, ...item.fields, image };\r\n        return product;\r\n      });\r\n\r\n      let featuredProducts = storeProducts.filter((item) => item.featured === true);\r\n\r\n      return {\r\n        ...state,\r\n        storeProducts: storeProducts,\r\n        filteredProducts: storeProducts,\r\n        featuredProducts: featuredProducts,\r\n        loading: false,\r\n      };\r\n\r\n    case ProductType.ADD_TO_CART:\r\n      let tempCart = [...state.cart];\r\n      let tempProducts = [...state.storeProducts];\r\n\r\n      let tempItem = tempCart.find((item) => item.id === payload);\r\n\r\n      if (!tempItem) {\r\n        tempItem = tempProducts.find((item) => item.id === payload);\r\n        let total = tempItem.price;\r\n        let cartItem = { ...tempItem, count: 1, total };\r\n        tempCart = [...tempCart, cartItem];\r\n      } else {\r\n        tempItem.count++;\r\n\r\n        tempItem.total = tempItem.price * tempItem.count;\r\n        tempItem.total = parseFloat(tempItem.total.toFixed(2));\r\n      }\r\n\r\n      return { ...state, cart: tempCart };\r\n\r\n    case ProductType.ADD_TOTALS:\r\n      let subTotal: any = 0;\r\n      let cartItems: any = 0;\r\n      state.cart.forEach((item) => {\r\n        subTotal += item.total;\r\n        cartItems += item.count;\r\n      });\r\n\r\n      subTotal = parseFloat(subTotal).toFixed(2);\r\n      let tax = parseFloat((subTotal * 0.2) as any).toFixed(2);\r\n      let total = subTotal + tax;\r\n      total = parseFloat(total).toFixed(2);\r\n\r\n      return {\r\n        ...state,\r\n        cartItems: cartItems,\r\n        cartSubTotal: subTotal,\r\n        cartTax: tax as any,\r\n        cartTotal: total as any,\r\n      };\r\n\r\n    case ProductType.SET_ITEM_CART:\r\n      let obj: any = {};\r\n      let cartStringify;\r\n      let cartSubTotalStringify;\r\n      let cartTaxStringify;\r\n\r\n      obj.cartStringify = state.cart;\r\n      obj.cartSubTotalStringify = Number(state.cartSubTotal);\r\n      obj.cartTaxStringify = Number(state.cartTax);\r\n\r\n      localStorage.setItem(\"cart\", JSON.stringify(obj));\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case ProductType.GET_ITEM_CART:\r\n      let cart: any = [];\r\n      let count: any = 0;\r\n      let cartTotal: any = 0;\r\n      let cartSubTotal: any = 0;\r\n      let cartTax: any = 0;\r\n\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\")!);\r\n\r\n        cart.cartStringify.map((item) => {\r\n          return (count += item.count);\r\n        });\r\n\r\n        cart.cartStringify.map((item) => {\r\n          cartTotal += item.total;\r\n\r\n          return parseFloat(cartTotal).toFixed(2);\r\n        });\r\n      } else {\r\n        cart.cartStringify = cart;\r\n        cart.cartSubTotalStringify = parseFloat(cartSubTotal).toFixed(2);\r\n        cart.cartTaxStringify = parseFloat(cartTax).toFixed(2);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        cart: cart.cartStringify,\r\n        cartItems: count,\r\n        cartTotal: cartTotal,\r\n        cartSubTotal: cart.cartSubTotalStringify,\r\n        cartTax: cart.cartTaxStringify,\r\n      };\r\n\r\n    case ProductType.SET_SINGLE_PRODUCT:\r\n      let product = state.storeProducts.find((item) => item.id === payload);\r\n      localStorage.setItem(\"singleProduct\", JSON.stringify(product));\r\n\r\n      return { ...state, singleProduct: { ...product }, loading: false };\r\n\r\n    case ProductType.GET_SINGLE_PRODUCT:\r\n      let singleProduct;\r\n\r\n      if (localStorage.getItem(\"singleProduct\")) {\r\n        singleProduct = JSON.parse(localStorage.getItem(\"singleProduct\")!);\r\n      } else if (!localStorage.getItem(\"singleProduct\")) {\r\n        singleProduct = {};\r\n      } else {\r\n        return singleProduct;\r\n      }\r\n\r\n      return { ...state, singleProduct: { ...singleProduct }, loading: false };\r\n\r\n    case ProductType.REMOVE:\r\n      let removeCart = [...state.cart];\r\n      removeCart = removeCart.filter((item) => item.id !== payload);\r\n\r\n      return { ...state, cart: removeCart };\r\n\r\n    case ProductType.CLEAR:\r\n      return { ...state, cart: [] };\r\n\r\n    case ProductType.INCREMENT:\r\n      let incCart = [...state.cart];\r\n\r\n      return { ...state, ...incCart };\r\n\r\n    case ProductType.DECREMENT:\r\n      let decCart = [...state.cart];\r\n      const cartItem = decCart.find((item) => item.id === payload);\r\n\r\n      if (cartItem.count <= 1) {\r\n        let removeCart = [...state.cart];\r\n        removeCart = removeCart.filter((item) => item.id !== payload);\r\n\r\n        return { ...state, cart: removeCart };\r\n      }\r\n\r\n      cartItem.count = cartItem.count - 1;\r\n      cartItem.total = cartItem.count * cartItem.price;\r\n\r\n      return { ...state, cart: decCart };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}